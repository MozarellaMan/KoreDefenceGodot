[gd_resource type="ShaderMaterial" load_steps=6 format=2]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
constant = Color( 1, 0, 0, 1 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2]
uniform_name = "FlashStatus"

[sub_resource type="VisualShaderNodeIf" id=3]
default_input_values = [ 0, 0.0, 1, 1.0, 2, 1e-05, 3, Vector3( 0, 0, 0 ), 4, Vector3( 0, 0, 0 ), 5, Vector3( 0, 0, 0 ) ]

[sub_resource type="VisualShaderNodeTexture" id=4]
source = 2

[sub_resource type="VisualShader" id=5]
code = "shader_type canvas_item;
uniform float FlashStatus;



void vertex() {
// Output:0

}

void fragment() {
// ScalarUniform:3
	float n_out3p0 = FlashStatus;

// Color:2
	vec3 n_out2p0 = vec3(1.000000, 0.000000, 0.000000);
	float n_out2p1 = 1.000000;

// Texture:5
	vec3 n_out5p0;
	float n_out5p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out5p0 = _tex_read.rgb;
		n_out5p1 = _tex_read.a;
	}

// If:4
	float n_in4p1 = 1.00000;
	float n_in4p2 = 0.00001;
	vec3 n_out4p0;
	if(abs(n_out3p0 - n_in4p1) < n_in4p2)
	{
		n_out4p0 = n_out2p0;
	}
	else if(n_out3p0 < n_in4p1)
	{
		n_out4p0 = n_out5p0;
	}
	else
	{
		n_out4p0 = n_out2p0;
	}

// Output:0
	COLOR.rgb = n_out4p0;
	COLOR.a = n_out5p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 0, 155.667 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 780, 180 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 277, 323 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 168, 229 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 580, 240 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 340, 120 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 4, 0, 0, 0, 2, 0, 4, 3, 2, 0, 4, 4, 5, 0, 4, 5, 5, 1, 0, 1 )

[resource]
shader = SubResource( 5 )
shader_param/FlashStatus = 0.0
